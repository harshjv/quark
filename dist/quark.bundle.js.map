{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///quark.bundle.js","webpack:///webpack/bootstrap d27475581271a88dc64a?f494","webpack:///./src/lib.js","webpack:///external \"electron\"?6928","webpack:///external \"path\"","webpack:///./~/array-filter/index.js","webpack:///./~/array-map/index.js","webpack:///./~/array-reduce/index.js","webpack:///./src/stream.js","webpack:///./~/debug/debug.js","webpack:///./~/debug/node.js","webpack:///./~/jsonify/index.js","webpack:///./~/jsonify/lib/parse.js","webpack:///./~/jsonify/lib/stringify.js","webpack:///./~/ms/index.js","webpack:///./~/shell-quote/index.js","webpack:///./~/xtend/immutable.js","webpack:///external \"child_process\"","webpack:///external \"fs\"","webpack:///external \"net\"","webpack:///external \"tty\"","webpack:///external \"util\""],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_24__","__WEBPACK_EXTERNAL_MODULE_69__","__WEBPACK_EXTERNAL_MODULE_257__","__WEBPACK_EXTERNAL_MODULE_259__","__WEBPACK_EXTERNAL_MODULE_260__","__WEBPACK_EXTERNAL_MODULE_261__","__WEBPACK_EXTERNAL_MODULE_262__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","0","_interopRequireDefault","obj","__esModule","default","_stream","_stream2","previousTime","coerce","val","Error","stack","message","log","namespace","_len","arguments","length","args","Array","_key","currentTime","Date","diff","map","arg","JSON","stringify","time","tag","data","24","69","113","arr","fn","filter","ret","hasOwn","push","Object","prototype","hasOwnProperty","114","xs","f","res","x","115","acc","hasAcc","reduce","121","_defineProperty","key","value","defineProperty","enumerable","configurable","writable","_typeof","Symbol","iterator","constructor","_debug","_debug2","_path","_path2","_xtend","_xtend2","_child_process","_shellQuote","debug","_process","process","platform","env","PATH_SEP","PATH_KEY","PATH","Path","ESCAPE_CHAR","ELECTRON_LIB","join","__dirname","commandToString","cmd","pattern","op","handleQuotes","s","test","replace","String","getNewPathVariable","result","cwd","parent","concat","formatAndSpawn","command","opts","options","file","comspec","windowsVerbatimArguments","shell","spawn","handleSpawningInMainProcess","out","parsed","parse","","escape","overridePATH","child","stdin","write","bind","setEncoding","stdout","pipe","on","console","type","_ret","_require","ipcRenderer","v","send","versions","electron","_ret2","_require2","ipcMain","logger","event","125","selectColor","colors","prevColor","disabled","enabled","self","curr","ms","prevTime","prev","useColors","color","slice","index","match","format","formatter","formatters","splice","formatArgs","apply","logFn","enable","namespaces","save","split","len","skips","RegExp","substr","names","disable","name","humanize","126","debugColors","DEBUG_COLORS","trim","toLowerCase","tty","isatty","fd","toUTCString","stream","util","DEBUG","load","createWritableStdioStream","tty_wrap","binding","guessHandleType","WriteStream","_type","_handle","unref","fs","SyncWriteStream","autoClose","net","Socket","readable","read","_isStdio","parseInt","DEBUG_FD","stderr","inspect","o","175","176","at","ch","text","escapee","\"","\\","/","b","n","r","t","error","next","charAt","number","string","isFinite","hex","uffff","fromCharCode","white","word","array","object","source","reviver","walk","holder","k","undefined","177","quote","escapable","lastIndex","meta","charCodeAt","toString","str","partial","mind","gap","toJSON","rep","indent","\b","\t","\n","\f","\r","replacer","space","179","exec","parseFloat","y","d","h","short","Math","round","long","plural","floor","ceil","249","getVar","_","pre","TOKEN","json","chunker","CONTROL","BAREWORD","SINGLE_QUOTE","DOUBLE_QUOTE","Boolean","commented","j","parseEnvVar","varend","varname","indexOf","SQ","DQ","DS","BS","esc","isGlob","comment","META","pow","random","mapped","256","extend","target","257","259","260","261","262"],"mappings":"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","file":"quark.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"electron\"), require(\"path\"), require(\"child_process\"), require(\"fs\"), require(\"net\"), require(\"tty\"), require(\"util\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"electron\", \"path\", \"child_process\", \"fs\", \"net\", \"tty\", \"util\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"electron\"), require(\"path\"), require(\"child_process\"), require(\"fs\"), require(\"net\"), require(\"tty\"), require(\"util\")) : factory(root[\"electron\"], root[\"path\"], root[\"child_process\"], root[\"fs\"], root[\"net\"], root[\"tty\"], root[\"util\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_24__, __WEBPACK_EXTERNAL_MODULE_69__, __WEBPACK_EXTERNAL_MODULE_257__, __WEBPACK_EXTERNAL_MODULE_259__, __WEBPACK_EXTERNAL_MODULE_260__, __WEBPACK_EXTERNAL_MODULE_261__, __WEBPACK_EXTERNAL_MODULE_262__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"electron\"), require(\"path\"), require(\"child_process\"), require(\"fs\"), require(\"net\"), require(\"tty\"), require(\"util\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"electron\", \"path\", \"child_process\", \"fs\", \"net\", \"tty\", \"util\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"electron\"), require(\"path\"), require(\"child_process\"), require(\"fs\"), require(\"net\"), require(\"tty\"), require(\"util\")) : factory(root[\"electron\"], root[\"path\"], root[\"child_process\"], root[\"fs\"], root[\"net\"], root[\"tty\"], root[\"util\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_24__, __WEBPACK_EXTERNAL_MODULE_69__, __WEBPACK_EXTERNAL_MODULE_257__, __WEBPACK_EXTERNAL_MODULE_259__, __WEBPACK_EXTERNAL_MODULE_260__, __WEBPACK_EXTERNAL_MODULE_261__, __WEBPACK_EXTERNAL_MODULE_262__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _stream = __webpack_require__(121);\n\t\n\tvar _stream2 = _interopRequireDefault(_stream);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar previousTime = void 0;\n\t\n\tvar coerce = function coerce(val) {\n\t  return val instanceof Error ? val.stack || val.message : val;\n\t};\n\tvar log = (0, _stream2.default)();\n\t\n\tmodule.exports = function (namespace) {\n\t  return function () {\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    var currentTime = new Date();\n\t    var diff = currentTime - (previousTime || currentTime);\n\t    previousTime = currentTime;\n\t\n\t    args = args.map(function (arg) {\n\t      return coerce(arg);\n\t    });\n\t\n\t    log(JSON.stringify({\n\t      diff: diff,\n\t      time: currentTime,\n\t      tag: namespace,\n\t      data: args\n\t    }));\n\t  };\n\t};\n\n/***/ },\n\n/***/ 24:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"electron\");\n\n/***/ },\n\n/***/ 69:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"path\");\n\n/***/ },\n\n/***/ 113:\n/***/ function(module, exports) {\n\n\t/**\n\t * Array#filter.\n\t *\n\t * @param {Array} arr\n\t * @param {Function} fn\n\t * @return {Array}\n\t */\n\t\n\tmodule.exports = function (arr, fn) {\n\t  if (arr.filter) return arr.filter(fn);\n\t  var ret = [];\n\t  for (var i = 0; i < arr.length; i++) {\n\t    if (!hasOwn.call(arr, i)) continue;\n\t    if (fn(arr[i], i, arr)) ret.push(arr[i]);\n\t  }\n\t  return ret;\n\t};\n\t\n\tvar hasOwn = Object.prototype.hasOwnProperty;\n\n\n/***/ },\n\n/***/ 114:\n/***/ function(module, exports) {\n\n\tmodule.exports = function (xs, f) {\n\t    if (xs.map) return xs.map(f);\n\t    var res = [];\n\t    for (var i = 0; i < xs.length; i++) {\n\t        var x = xs[i];\n\t        if (hasOwn.call(xs, i)) res.push(f(x, i, xs));\n\t    }\n\t    return res;\n\t};\n\t\n\tvar hasOwn = Object.prototype.hasOwnProperty;\n\n\n/***/ },\n\n/***/ 115:\n/***/ function(module, exports) {\n\n\tvar hasOwn = Object.prototype.hasOwnProperty;\n\t\n\tmodule.exports = function (xs, f, acc) {\n\t    var hasAcc = arguments.length >= 3;\n\t    if (hasAcc && xs.reduce) return xs.reduce(f, acc);\n\t    if (xs.reduce) return xs.reduce(f);\n\t    \n\t    for (var i = 0; i < xs.length; i++) {\n\t        if (!hasOwn.call(xs, i)) continue;\n\t        if (!hasAcc) {\n\t            acc = xs[i];\n\t            hasAcc = true;\n\t            continue;\n\t        }\n\t        acc = f(acc, xs[i], i);\n\t    }\n\t    return acc;\n\t};\n\n\n/***/ },\n\n/***/ 121:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _debug = __webpack_require__(126);\n\t\n\tvar _debug2 = _interopRequireDefault(_debug);\n\t\n\tvar _path = __webpack_require__(69);\n\t\n\tvar _path2 = _interopRequireDefault(_path);\n\t\n\tvar _xtend = __webpack_require__(256);\n\t\n\tvar _xtend2 = _interopRequireDefault(_xtend);\n\t\n\tvar _child_process = __webpack_require__(257);\n\t\n\tvar _shellQuote = __webpack_require__(249);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tvar debug = (0, _debug2.default)('quark-logger:stream');\n\t\n\tvar _process = process,\n\t    platform = _process.platform,\n\t    env = _process.env;\n\t\n\t\n\tvar PATH_SEP = platform === 'win32' ? ';' : ':';\n\tvar PATH_KEY = platform === 'win32' && !(env.PATH && !env.Path) ? 'Path' : 'PATH';\n\tvar ESCAPE_CHAR = platform === 'win32' ? '^' : '\\\\';\n\tvar ELECTRON_LIB = 'electron ' + _path2.default.join(__dirname, 'electron.bundle.js');\n\t\n\tvar commandToString = function commandToString(cmd) {\n\t  return cmd.pattern || cmd.op || handleQuotes(cmd);\n\t};\n\t\n\tvar handleQuotes = function handleQuotes(s) {\n\t  if (/[\"'\\s]/.test(s)) return '\"' + s.replace(/([\"\\\\$`!])/g, '\\\\$1') + '\"';\n\t  if (/[\"\\s]/.test(s) && !/'/.test(s)) return \"'\" + s.replace(/(['\\\\])/g, '\\\\$1') + \"'\";\n\t  return String(s).replace(/([\\\\$`()!#&*|])/g, '\\\\$1');\n\t};\n\t\n\tvar getNewPathVariable = function getNewPathVariable() {\n\t  var PATH = env[PATH_KEY];\n\t  var result = [];\n\t  var cwd = process.cwd();\n\t  var parent = void 0;\n\t\n\t  while (true) {\n\t    parent = _path2.default.join(cwd, '..');\n\t    result.push(_path2.default.join(cwd, 'node_modules/.bin'));\n\t    if (parent === cwd) return result.concat(PATH).join(PATH_SEP);\n\t    cwd = parent;\n\t  }\n\t};\n\t\n\tvar formatAndSpawn = function formatAndSpawn(command, opts) {\n\t  var options = (0, _xtend2.default)({}, opts);\n\t  var file = void 0;\n\t  var args = void 0;\n\t\n\t  if (platform === 'win32') {\n\t    file = env.comspec || 'cmd.exe';\n\t    args = ['/s', '/c', '\"' + command + '\"'];\n\t    options.windowsVerbatimArguments = true;\n\t  } else {\n\t    file = '/bin/sh';\n\t    args = ['-c', command];\n\t    options.windowsVerbatimArguments = false;\n\t  }\n\t\n\t  if (options && options.shell) {\n\t    file = options.shell;\n\t    delete options.shell;\n\t  }\n\t\n\t  debug('Spawning electron', file, args, options);\n\t\n\t  return (0, _child_process.spawn)(file, args, options);\n\t};\n\t\n\tvar handleSpawningInMainProcess = function handleSpawningInMainProcess() {\n\t  var out = void 0;\n\t  var parsed = (0, _shellQuote.parse)(ELECTRON_LIB, (0, _xtend2.default)({ '': '$' }), { escape: ESCAPE_CHAR }).map(commandToString).join(' ');\n\t\n\t  var overridePATH = _defineProperty({}, PATH_KEY, getNewPathVariable());\n\t\n\t  var child = formatAndSpawn(parsed, { env: (0, _xtend2.default)(env, overridePATH) });\n\t  out = child.stdin.write.bind(child.stdin);\n\t\n\t  child.stdin.setEncoding('utf-8');\n\t  child.stdout.pipe(process.stdout);\n\t\n\t  child.on('exit', function () {\n\t    out = console.log.bind(console);\n\t  });\n\t\n\t  return function (log) {\n\t    return out(log);\n\t  };\n\t};\n\t\n\tmodule.exports = function () {\n\t  if (typeof process === 'undefined') {\n\t    // Web browser\n\t    debug('Web browser');\n\t\n\t    return console.log.bind(console);\n\t  } else {\n\t    if (process.type === 'renderer') {\n\t      var _ret = function () {\n\t        // Renderer process\n\t        debug('Electron renderer process');\n\t\n\t        var _require = __webpack_require__(24),\n\t            ipcRenderer = _require.ipcRenderer;\n\t\n\t        return {\n\t          v: function v(log) {\n\t            return ipcRenderer.send('quark-logger:ipc', log);\n\t          }\n\t        };\n\t      }();\n\t\n\t      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t    } else {\n\t      if (process.versions.electron) {\n\t        var _ret2 = function () {\n\t          // Electron\n\t          debug('Electron main process');\n\t\n\t          var _require2 = __webpack_require__(24),\n\t              ipcMain = _require2.ipcMain;\n\t\n\t          var logger = handleSpawningInMainProcess();\n\t\n\t          ipcMain.on('quark-logger:ipc', function (event, arg) {\n\t            logger(arg);\n\t          });\n\t\n\t          return {\n\t            v: logger\n\t          };\n\t        }();\n\t\n\t        if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n\t      } else {\n\t        // Node.js\n\t        debug('Node.js process');\n\t\n\t        return handleSpawningInMainProcess();\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n\n/***/ 125:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = debug;\n\texports.coerce = coerce;\n\texports.disable = disable;\n\texports.enable = enable;\n\texports.enabled = enabled;\n\texports.humanize = __webpack_require__(179);\n\t\n\t/**\n\t * The currently active debug mode names, and names to skip.\n\t */\n\t\n\texports.names = [];\n\texports.skips = [];\n\t\n\t/**\n\t * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t *\n\t * Valid key names are a single, lowercased letter, i.e. \"n\".\n\t */\n\t\n\texports.formatters = {};\n\t\n\t/**\n\t * Previously assigned color.\n\t */\n\t\n\tvar prevColor = 0;\n\t\n\t/**\n\t * Previous log timestamp.\n\t */\n\t\n\tvar prevTime;\n\t\n\t/**\n\t * Select a color.\n\t *\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction selectColor() {\n\t  return exports.colors[prevColor++ % exports.colors.length];\n\t}\n\t\n\t/**\n\t * Create a debugger with the given `namespace`.\n\t *\n\t * @param {String} namespace\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tfunction debug(namespace) {\n\t\n\t  // define the `disabled` version\n\t  function disabled() {\n\t  }\n\t  disabled.enabled = false;\n\t\n\t  // define the `enabled` version\n\t  function enabled() {\n\t\n\t    var self = enabled;\n\t\n\t    // set `diff` timestamp\n\t    var curr = +new Date();\n\t    var ms = curr - (prevTime || curr);\n\t    self.diff = ms;\n\t    self.prev = prevTime;\n\t    self.curr = curr;\n\t    prevTime = curr;\n\t\n\t    // add the `color` if not set\n\t    if (null == self.useColors) self.useColors = exports.useColors();\n\t    if (null == self.color && self.useColors) self.color = selectColor();\n\t\n\t    var args = Array.prototype.slice.call(arguments);\n\t\n\t    args[0] = exports.coerce(args[0]);\n\t\n\t    if ('string' !== typeof args[0]) {\n\t      // anything else let's inspect with %o\n\t      args = ['%o'].concat(args);\n\t    }\n\t\n\t    // apply any `formatters` transformations\n\t    var index = 0;\n\t    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n\t      // if we encounter an escaped % then don't increase the array index\n\t      if (match === '%%') return match;\n\t      index++;\n\t      var formatter = exports.formatters[format];\n\t      if ('function' === typeof formatter) {\n\t        var val = args[index];\n\t        match = formatter.call(self, val);\n\t\n\t        // now we need to remove `args[index]` since it's inlined in the `format`\n\t        args.splice(index, 1);\n\t        index--;\n\t      }\n\t      return match;\n\t    });\n\t\n\t    if ('function' === typeof exports.formatArgs) {\n\t      args = exports.formatArgs.apply(self, args);\n\t    }\n\t    var logFn = enabled.log || exports.log || console.log.bind(console);\n\t    logFn.apply(self, args);\n\t  }\n\t  enabled.enabled = true;\n\t\n\t  var fn = exports.enabled(namespace) ? enabled : disabled;\n\t\n\t  fn.namespace = namespace;\n\t\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {String} namespaces\n\t * @api public\n\t */\n\t\n\tfunction enable(namespaces) {\n\t  exports.save(namespaces);\n\t\n\t  var split = (namespaces || '').split(/[\\s,]+/);\n\t  var len = split.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    if (!split[i]) continue; // ignore empty strings\n\t    namespaces = split[i].replace(/\\*/g, '.*?');\n\t    if (namespaces[0] === '-') {\n\t      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t    } else {\n\t      exports.names.push(new RegExp('^' + namespaces + '$'));\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Disable debug output.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction disable() {\n\t  exports.enable('');\n\t}\n\t\n\t/**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t *\n\t * @param {String} name\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction enabled(name) {\n\t  var i, len;\n\t  for (i = 0, len = exports.skips.length; i < len; i++) {\n\t    if (exports.skips[i].test(name)) {\n\t      return false;\n\t    }\n\t  }\n\t  for (i = 0, len = exports.names.length; i < len; i++) {\n\t    if (exports.names[i].test(name)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Coerce `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tfunction coerce(val) {\n\t  if (val instanceof Error) return val.stack || val.message;\n\t  return val;\n\t}\n\n\n/***/ },\n\n/***/ 126:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar tty = __webpack_require__(261);\n\tvar util = __webpack_require__(262);\n\t\n\t/**\n\t * This is the Node.js implementation of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = __webpack_require__(125);\n\texports.log = log;\n\texports.formatArgs = formatArgs;\n\texports.save = save;\n\texports.load = load;\n\texports.useColors = useColors;\n\t\n\t/**\n\t * Colors.\n\t */\n\t\n\texports.colors = [6, 2, 3, 4, 5, 1];\n\t\n\t/**\n\t * The file descriptor to write the `debug()` calls to.\n\t * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n\t *\n\t *   $ DEBUG_FD=3 node script.js 3>debug.log\n\t */\n\t\n\tvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\tvar stream = 1 === fd ? process.stdout :\n\t             2 === fd ? process.stderr :\n\t             createWritableStdioStream(fd);\n\t\n\t/**\n\t * Is stdout a TTY? Colored output is enabled when `true`.\n\t */\n\t\n\tfunction useColors() {\n\t  var debugColors = (process.env.DEBUG_COLORS || '').trim().toLowerCase();\n\t  if (0 === debugColors.length) {\n\t    return tty.isatty(fd);\n\t  } else {\n\t    return '0' !== debugColors\n\t        && 'no' !== debugColors\n\t        && 'false' !== debugColors\n\t        && 'disabled' !== debugColors;\n\t  }\n\t}\n\t\n\t/**\n\t * Map %o to `util.inspect()`, since Node doesn't do that out of the box.\n\t */\n\t\n\tvar inspect = (4 === util.inspect.length ?\n\t  // node <= 0.8.x\n\t  function (v, colors) {\n\t    return util.inspect(v, void 0, void 0, colors);\n\t  } :\n\t  // node > 0.8.x\n\t  function (v, colors) {\n\t    return util.inspect(v, { colors: colors });\n\t  }\n\t);\n\t\n\texports.formatters.o = function(v) {\n\t  return inspect(v, this.useColors)\n\t    .replace(/\\s*\\n\\s*/g, ' ');\n\t};\n\t\n\t/**\n\t * Adds ANSI color escape codes if enabled.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction formatArgs() {\n\t  var args = arguments;\n\t  var useColors = this.useColors;\n\t  var name = this.namespace;\n\t\n\t  if (useColors) {\n\t    var c = this.color;\n\t\n\t    args[0] = '  \\u001b[3' + c + ';1m' + name + ' '\n\t      + '\\u001b[0m'\n\t      + args[0] + '\\u001b[3' + c + 'm'\n\t      + ' +' + exports.humanize(this.diff) + '\\u001b[0m';\n\t  } else {\n\t    args[0] = new Date().toUTCString()\n\t      + ' ' + name + ' ' + args[0];\n\t  }\n\t  return args;\n\t}\n\t\n\t/**\n\t * Invokes `console.error()` with the specified arguments.\n\t */\n\t\n\tfunction log() {\n\t  return stream.write(util.format.apply(this, arguments) + '\\n');\n\t}\n\t\n\t/**\n\t * Save `namespaces`.\n\t *\n\t * @param {String} namespaces\n\t * @api private\n\t */\n\t\n\tfunction save(namespaces) {\n\t  if (null == namespaces) {\n\t    // If you set a process.env field to null or undefined, it gets cast to the\n\t    // string 'null' or 'undefined'. Just delete instead.\n\t    delete process.env.DEBUG;\n\t  } else {\n\t    process.env.DEBUG = namespaces;\n\t  }\n\t}\n\t\n\t/**\n\t * Load `namespaces`.\n\t *\n\t * @return {String} returns the previously persisted debug modes\n\t * @api private\n\t */\n\t\n\tfunction load() {\n\t  return process.env.DEBUG;\n\t}\n\t\n\t/**\n\t * Copied from `node/src/node.js`.\n\t *\n\t * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n\t * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n\t */\n\t\n\tfunction createWritableStdioStream (fd) {\n\t  var stream;\n\t  var tty_wrap = process.binding('tty_wrap');\n\t\n\t  // Note stream._type is used for test-module-load-list.js\n\t\n\t  switch (tty_wrap.guessHandleType(fd)) {\n\t    case 'TTY':\n\t      stream = new tty.WriteStream(fd);\n\t      stream._type = 'tty';\n\t\n\t      // Hack to have stream not keep the event loop alive.\n\t      // See https://github.com/joyent/node/issues/1726\n\t      if (stream._handle && stream._handle.unref) {\n\t        stream._handle.unref();\n\t      }\n\t      break;\n\t\n\t    case 'FILE':\n\t      var fs = __webpack_require__(259);\n\t      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n\t      stream._type = 'fs';\n\t      break;\n\t\n\t    case 'PIPE':\n\t    case 'TCP':\n\t      var net = __webpack_require__(260);\n\t      stream = new net.Socket({\n\t        fd: fd,\n\t        readable: false,\n\t        writable: true\n\t      });\n\t\n\t      // FIXME Should probably have an option in net.Socket to create a\n\t      // stream from an existing fd which is writable only. But for now\n\t      // we'll just add this hack and set the `readable` member to false.\n\t      // Test: ./node test/fixtures/echo.js < /etc/passwd\n\t      stream.readable = false;\n\t      stream.read = null;\n\t      stream._type = 'pipe';\n\t\n\t      // FIXME Hack to have stream not keep the event loop alive.\n\t      // See https://github.com/joyent/node/issues/1726\n\t      if (stream._handle && stream._handle.unref) {\n\t        stream._handle.unref();\n\t      }\n\t      break;\n\t\n\t    default:\n\t      // Probably an error on in uv_guess_handle()\n\t      throw new Error('Implement me. Unknown stream file type!');\n\t  }\n\t\n\t  // For supporting legacy API we put the FD here.\n\t  stream.fd = fd;\n\t\n\t  stream._isStdio = true;\n\t\n\t  return stream;\n\t}\n\t\n\t/**\n\t * Enable namespaces listed in `process.env.DEBUG` initially.\n\t */\n\t\n\texports.enable(load());\n\n\n/***/ },\n\n/***/ 175:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports.parse = __webpack_require__(176);\n\texports.stringify = __webpack_require__(177);\n\n\n/***/ },\n\n/***/ 176:\n/***/ function(module, exports) {\n\n\tvar at, // The index of the current character\n\t    ch, // The current character\n\t    escapee = {\n\t        '\"':  '\"',\n\t        '\\\\': '\\\\',\n\t        '/':  '/',\n\t        b:    '\\b',\n\t        f:    '\\f',\n\t        n:    '\\n',\n\t        r:    '\\r',\n\t        t:    '\\t'\n\t    },\n\t    text,\n\t\n\t    error = function (m) {\n\t        // Call error when something is wrong.\n\t        throw {\n\t            name:    'SyntaxError',\n\t            message: m,\n\t            at:      at,\n\t            text:    text\n\t        };\n\t    },\n\t    \n\t    next = function (c) {\n\t        // If a c parameter is provided, verify that it matches the current character.\n\t        if (c && c !== ch) {\n\t            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n\t        }\n\t        \n\t        // Get the next character. When there are no more characters,\n\t        // return the empty string.\n\t        \n\t        ch = text.charAt(at);\n\t        at += 1;\n\t        return ch;\n\t    },\n\t    \n\t    number = function () {\n\t        // Parse a number value.\n\t        var number,\n\t            string = '';\n\t        \n\t        if (ch === '-') {\n\t            string = '-';\n\t            next('-');\n\t        }\n\t        while (ch >= '0' && ch <= '9') {\n\t            string += ch;\n\t            next();\n\t        }\n\t        if (ch === '.') {\n\t            string += '.';\n\t            while (next() && ch >= '0' && ch <= '9') {\n\t                string += ch;\n\t            }\n\t        }\n\t        if (ch === 'e' || ch === 'E') {\n\t            string += ch;\n\t            next();\n\t            if (ch === '-' || ch === '+') {\n\t                string += ch;\n\t                next();\n\t            }\n\t            while (ch >= '0' && ch <= '9') {\n\t                string += ch;\n\t                next();\n\t            }\n\t        }\n\t        number = +string;\n\t        if (!isFinite(number)) {\n\t            error(\"Bad number\");\n\t        } else {\n\t            return number;\n\t        }\n\t    },\n\t    \n\t    string = function () {\n\t        // Parse a string value.\n\t        var hex,\n\t            i,\n\t            string = '',\n\t            uffff;\n\t        \n\t        // When parsing for string values, we must look for \" and \\ characters.\n\t        if (ch === '\"') {\n\t            while (next()) {\n\t                if (ch === '\"') {\n\t                    next();\n\t                    return string;\n\t                } else if (ch === '\\\\') {\n\t                    next();\n\t                    if (ch === 'u') {\n\t                        uffff = 0;\n\t                        for (i = 0; i < 4; i += 1) {\n\t                            hex = parseInt(next(), 16);\n\t                            if (!isFinite(hex)) {\n\t                                break;\n\t                            }\n\t                            uffff = uffff * 16 + hex;\n\t                        }\n\t                        string += String.fromCharCode(uffff);\n\t                    } else if (typeof escapee[ch] === 'string') {\n\t                        string += escapee[ch];\n\t                    } else {\n\t                        break;\n\t                    }\n\t                } else {\n\t                    string += ch;\n\t                }\n\t            }\n\t        }\n\t        error(\"Bad string\");\n\t    },\n\t\n\t    white = function () {\n\t\n\t// Skip whitespace.\n\t\n\t        while (ch && ch <= ' ') {\n\t            next();\n\t        }\n\t    },\n\t\n\t    word = function () {\n\t\n\t// true, false, or null.\n\t\n\t        switch (ch) {\n\t        case 't':\n\t            next('t');\n\t            next('r');\n\t            next('u');\n\t            next('e');\n\t            return true;\n\t        case 'f':\n\t            next('f');\n\t            next('a');\n\t            next('l');\n\t            next('s');\n\t            next('e');\n\t            return false;\n\t        case 'n':\n\t            next('n');\n\t            next('u');\n\t            next('l');\n\t            next('l');\n\t            return null;\n\t        }\n\t        error(\"Unexpected '\" + ch + \"'\");\n\t    },\n\t\n\t    value,  // Place holder for the value function.\n\t\n\t    array = function () {\n\t\n\t// Parse an array value.\n\t\n\t        var array = [];\n\t\n\t        if (ch === '[') {\n\t            next('[');\n\t            white();\n\t            if (ch === ']') {\n\t                next(']');\n\t                return array;   // empty array\n\t            }\n\t            while (ch) {\n\t                array.push(value());\n\t                white();\n\t                if (ch === ']') {\n\t                    next(']');\n\t                    return array;\n\t                }\n\t                next(',');\n\t                white();\n\t            }\n\t        }\n\t        error(\"Bad array\");\n\t    },\n\t\n\t    object = function () {\n\t\n\t// Parse an object value.\n\t\n\t        var key,\n\t            object = {};\n\t\n\t        if (ch === '{') {\n\t            next('{');\n\t            white();\n\t            if (ch === '}') {\n\t                next('}');\n\t                return object;   // empty object\n\t            }\n\t            while (ch) {\n\t                key = string();\n\t                white();\n\t                next(':');\n\t                if (Object.hasOwnProperty.call(object, key)) {\n\t                    error('Duplicate key \"' + key + '\"');\n\t                }\n\t                object[key] = value();\n\t                white();\n\t                if (ch === '}') {\n\t                    next('}');\n\t                    return object;\n\t                }\n\t                next(',');\n\t                white();\n\t            }\n\t        }\n\t        error(\"Bad object\");\n\t    };\n\t\n\tvalue = function () {\n\t\n\t// Parse a JSON value. It could be an object, an array, a string, a number,\n\t// or a word.\n\t\n\t    white();\n\t    switch (ch) {\n\t    case '{':\n\t        return object();\n\t    case '[':\n\t        return array();\n\t    case '\"':\n\t        return string();\n\t    case '-':\n\t        return number();\n\t    default:\n\t        return ch >= '0' && ch <= '9' ? number() : word();\n\t    }\n\t};\n\t\n\t// Return the json_parse function. It will have access to all of the above\n\t// functions and variables.\n\t\n\tmodule.exports = function (source, reviver) {\n\t    var result;\n\t    \n\t    text = source;\n\t    at = 0;\n\t    ch = ' ';\n\t    result = value();\n\t    white();\n\t    if (ch) {\n\t        error(\"Syntax error\");\n\t    }\n\t\n\t    // If there is a reviver function, we recursively walk the new structure,\n\t    // passing each name/value pair to the reviver function for possible\n\t    // transformation, starting with a temporary root object that holds the result\n\t    // in an empty key. If there is not a reviver function, we simply return the\n\t    // result.\n\t\n\t    return typeof reviver === 'function' ? (function walk(holder, key) {\n\t        var k, v, value = holder[key];\n\t        if (value && typeof value === 'object') {\n\t            for (k in value) {\n\t                if (Object.prototype.hasOwnProperty.call(value, k)) {\n\t                    v = walk(value, k);\n\t                    if (v !== undefined) {\n\t                        value[k] = v;\n\t                    } else {\n\t                        delete value[k];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return reviver.call(holder, key, value);\n\t    }({'': result}, '')) : result;\n\t};\n\n\n/***/ },\n\n/***/ 177:\n/***/ function(module, exports) {\n\n\tvar cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n\t    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n\t    gap,\n\t    indent,\n\t    meta = {    // table of character substitutions\n\t        '\\b': '\\\\b',\n\t        '\\t': '\\\\t',\n\t        '\\n': '\\\\n',\n\t        '\\f': '\\\\f',\n\t        '\\r': '\\\\r',\n\t        '\"' : '\\\\\"',\n\t        '\\\\': '\\\\\\\\'\n\t    },\n\t    rep;\n\t\n\tfunction quote(string) {\n\t    // If the string contains no control characters, no quote characters, and no\n\t    // backslash characters, then we can safely slap some quotes around it.\n\t    // Otherwise we must also replace the offending characters with safe escape\n\t    // sequences.\n\t    \n\t    escapable.lastIndex = 0;\n\t    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n\t        var c = meta[a];\n\t        return typeof c === 'string' ? c :\n\t            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n\t    }) + '\"' : '\"' + string + '\"';\n\t}\n\t\n\tfunction str(key, holder) {\n\t    // Produce a string from holder[key].\n\t    var i,          // The loop counter.\n\t        k,          // The member key.\n\t        v,          // The member value.\n\t        length,\n\t        mind = gap,\n\t        partial,\n\t        value = holder[key];\n\t    \n\t    // If the value has a toJSON method, call it to obtain a replacement value.\n\t    if (value && typeof value === 'object' &&\n\t            typeof value.toJSON === 'function') {\n\t        value = value.toJSON(key);\n\t    }\n\t    \n\t    // If we were called with a replacer function, then call the replacer to\n\t    // obtain a replacement value.\n\t    if (typeof rep === 'function') {\n\t        value = rep.call(holder, key, value);\n\t    }\n\t    \n\t    // What happens next depends on the value's type.\n\t    switch (typeof value) {\n\t        case 'string':\n\t            return quote(value);\n\t        \n\t        case 'number':\n\t            // JSON numbers must be finite. Encode non-finite numbers as null.\n\t            return isFinite(value) ? String(value) : 'null';\n\t        \n\t        case 'boolean':\n\t        case 'null':\n\t            // If the value is a boolean or null, convert it to a string. Note:\n\t            // typeof null does not produce 'null'. The case is included here in\n\t            // the remote chance that this gets fixed someday.\n\t            return String(value);\n\t            \n\t        case 'object':\n\t            if (!value) return 'null';\n\t            gap += indent;\n\t            partial = [];\n\t            \n\t            // Array.isArray\n\t            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\t                length = value.length;\n\t                for (i = 0; i < length; i += 1) {\n\t                    partial[i] = str(i, value) || 'null';\n\t                }\n\t                \n\t                // Join all of the elements together, separated with commas, and\n\t                // wrap them in brackets.\n\t                v = partial.length === 0 ? '[]' : gap ?\n\t                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n\t                    '[' + partial.join(',') + ']';\n\t                gap = mind;\n\t                return v;\n\t            }\n\t            \n\t            // If the replacer is an array, use it to select the members to be\n\t            // stringified.\n\t            if (rep && typeof rep === 'object') {\n\t                length = rep.length;\n\t                for (i = 0; i < length; i += 1) {\n\t                    k = rep[i];\n\t                    if (typeof k === 'string') {\n\t                        v = str(k, value);\n\t                        if (v) {\n\t                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                // Otherwise, iterate through all of the keys in the object.\n\t                for (k in value) {\n\t                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n\t                        v = str(k, value);\n\t                        if (v) {\n\t                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            \n\t        // Join all of the member texts together, separated with commas,\n\t        // and wrap them in braces.\n\t\n\t        v = partial.length === 0 ? '{}' : gap ?\n\t            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n\t            '{' + partial.join(',') + '}';\n\t        gap = mind;\n\t        return v;\n\t    }\n\t}\n\t\n\tmodule.exports = function (value, replacer, space) {\n\t    var i;\n\t    gap = '';\n\t    indent = '';\n\t    \n\t    // If the space parameter is a number, make an indent string containing that\n\t    // many spaces.\n\t    if (typeof space === 'number') {\n\t        for (i = 0; i < space; i += 1) {\n\t            indent += ' ';\n\t        }\n\t    }\n\t    // If the space parameter is a string, it will be used as the indent string.\n\t    else if (typeof space === 'string') {\n\t        indent = space;\n\t    }\n\t\n\t    // If there is a replacer, it must be a function or an array.\n\t    // Otherwise, throw an error.\n\t    rep = replacer;\n\t    if (replacer && typeof replacer !== 'function'\n\t    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n\t        throw new Error('JSON.stringify');\n\t    }\n\t    \n\t    // Make a fake root object containing our value under the key of ''.\n\t    // Return the result of stringifying the value.\n\t    return str('', {'': value});\n\t};\n\n\n/***/ },\n\n/***/ 179:\n/***/ function(module, exports) {\n\n\t/**\n\t * Helpers.\n\t */\n\t\n\tvar s = 1000;\n\tvar m = s * 60;\n\tvar h = m * 60;\n\tvar d = h * 24;\n\tvar y = d * 365.25;\n\t\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} options\n\t * @return {String|Number}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(val, options){\n\t  options = options || {};\n\t  if ('string' == typeof val) return parse(val);\n\t  return options.long\n\t    ? long(val)\n\t    : short(val);\n\t};\n\t\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction parse(str) {\n\t  str = '' + str;\n\t  if (str.length > 10000) return;\n\t  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\t  if (!match) return;\n\t  var n = parseFloat(match[1]);\n\t  var type = (match[2] || 'ms').toLowerCase();\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y;\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d;\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h;\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m;\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s;\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n;\n\t  }\n\t}\n\t\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction short(ms) {\n\t  if (ms >= d) return Math.round(ms / d) + 'd';\n\t  if (ms >= h) return Math.round(ms / h) + 'h';\n\t  if (ms >= m) return Math.round(ms / m) + 'm';\n\t  if (ms >= s) return Math.round(ms / s) + 's';\n\t  return ms + 'ms';\n\t}\n\t\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction long(ms) {\n\t  return plural(ms, d, 'day')\n\t    || plural(ms, h, 'hour')\n\t    || plural(ms, m, 'minute')\n\t    || plural(ms, s, 'second')\n\t    || ms + ' ms';\n\t}\n\t\n\t/**\n\t * Pluralization helper.\n\t */\n\t\n\tfunction plural(ms, n, name) {\n\t  if (ms < n) return;\n\t  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n\t  return Math.ceil(ms / n) + ' ' + name + 's';\n\t}\n\n\n/***/ },\n\n/***/ 249:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar json = typeof JSON !== undefined ? JSON : __webpack_require__(175);\n\tvar map = __webpack_require__(114);\n\tvar filter = __webpack_require__(113);\n\tvar reduce = __webpack_require__(115);\n\t\n\texports.quote = function (xs) {\n\t    return map(xs, function (s) {\n\t        if (s && typeof s === 'object') {\n\t            return s.op.replace(/(.)/g, '\\\\$1');\n\t        }\n\t        else if (/[\"\\s]/.test(s) && !/'/.test(s)) {\n\t            return \"'\" + s.replace(/(['\\\\])/g, '\\\\$1') + \"'\";\n\t        }\n\t        else if (/[\"'\\s]/.test(s)) {\n\t            return '\"' + s.replace(/([\"\\\\$`!])/g, '\\\\$1') + '\"';\n\t        }\n\t        else {\n\t            return String(s).replace(/([#!\"$&'()*,:;<=>?@\\[\\\\\\]^`{|}])/g, '\\\\$1'); \n\t        }\n\t    }).join(' ');\n\t};\n\t\n\tvar CONTROL = '(?:' + [\n\t    '\\\\|\\\\|', '\\\\&\\\\&', ';;', '\\\\|\\\\&', '[&;()|<>]'\n\t].join('|') + ')';\n\tvar META = '|&;()<> \\\\t';\n\tvar BAREWORD = '(\\\\\\\\[\\'\"' + META + ']|[^\\\\s\\'\"' + META + '])+';\n\tvar SINGLE_QUOTE = '\"((\\\\\\\\\"|[^\"])*?)\"';\n\tvar DOUBLE_QUOTE = '\\'((\\\\\\\\\\'|[^\\'])*?)\\'';\n\t\n\tvar TOKEN = '';\n\tfor (var i = 0; i < 4; i++) {\n\t    TOKEN += (Math.pow(16,8)*Math.random()).toString(16);\n\t}\n\t\n\texports.parse = function (s, env, opts) {\n\t    var mapped = parse(s, env, opts);\n\t    if (typeof env !== 'function') return mapped;\n\t    return reduce(mapped, function (acc, s) {\n\t        if (typeof s === 'object') return acc.concat(s);\n\t        var xs = s.split(RegExp('(' + TOKEN + '.*?' + TOKEN + ')', 'g'));\n\t        if (xs.length === 1) return acc.concat(xs[0]);\n\t        return acc.concat(map(filter(xs, Boolean), function (x) {\n\t            if (RegExp('^' + TOKEN).test(x)) {\n\t                return json.parse(x.split(TOKEN)[1]);\n\t            }\n\t            else return x;\n\t        }));\n\t    }, []);\n\t};\n\t\n\tfunction parse (s, env, opts) {\n\t    var chunker = new RegExp([\n\t        '(' + CONTROL + ')', // control chars\n\t        '(' + BAREWORD + '|' + SINGLE_QUOTE + '|' + DOUBLE_QUOTE + ')*'\n\t    ].join('|'), 'g');\n\t    var match = filter(s.match(chunker), Boolean);\n\t    var commented = false;\n\t\n\t    if (!match) return [];\n\t    if (!env) env = {};\n\t    if (!opts) opts = {};\n\t    return map(match, function (s, j) {\n\t        if (commented) {\n\t            return;\n\t        }\n\t        if (RegExp('^' + CONTROL + '$').test(s)) {\n\t            return { op: s };\n\t        }\n\t\n\t        // Hand-written scanner/parser for Bash quoting rules:\n\t        //\n\t        //  1. inside single quotes, all characters are printed literally.\n\t        //  2. inside double quotes, all characters are printed literally\n\t        //     except variables prefixed by '$' and backslashes followed by\n\t        //     either a double quote or another backslash.\n\t        //  3. outside of any quotes, backslashes are treated as escape\n\t        //     characters and not printed (unless they are themselves escaped)\n\t        //  4. quote context can switch mid-token if there is no whitespace\n\t        //     between the two quote contexts (e.g. all'one'\"token\" parses as\n\t        //     \"allonetoken\")\n\t        var SQ = \"'\";\n\t        var DQ = '\"';\n\t        var DS = '$';\n\t        var BS = opts.escape || '\\\\';\n\t        var quote = false;\n\t        var esc = false;\n\t        var out = '';\n\t        var isGlob = false;\n\t\n\t        for (var i = 0, len = s.length; i < len; i++) {\n\t            var c = s.charAt(i);\n\t            isGlob = isGlob || (!quote && (c === '*' || c === '?'));\n\t            if (esc) {\n\t                out += c;\n\t                esc = false;\n\t            }\n\t            else if (quote) {\n\t                if (c === quote) {\n\t                    quote = false;\n\t                }\n\t                else if (quote == SQ) {\n\t                    out += c;\n\t                }\n\t                else { // Double quote\n\t                    if (c === BS) {\n\t                        i += 1;\n\t                        c = s.charAt(i);\n\t                        if (c === DQ || c === BS || c === DS) {\n\t                            out += c;\n\t                        } else {\n\t                            out += BS + c;\n\t                        }\n\t                    }\n\t                    else if (c === DS) {\n\t                        out += parseEnvVar();\n\t                    }\n\t                    else {\n\t                        out += c;\n\t                    }\n\t                }\n\t            }\n\t            else if (c === DQ || c === SQ) {\n\t                quote = c;\n\t            }\n\t            else if (RegExp('^' + CONTROL + '$').test(c)) {\n\t                return { op: s };\n\t            }\n\t            else if (RegExp('^#$').test(c)) {\n\t                commented = true;\n\t                if (out.length){\n\t                    return [out, { comment: s.slice(i+1) + match.slice(j+1).join(' ') }];\n\t                }\n\t                return [{ comment: s.slice(i+1) + match.slice(j+1).join(' ') }];\n\t            }\n\t            else if (c === BS) {\n\t                esc = true;\n\t            }\n\t            else if (c === DS) {\n\t                out += parseEnvVar();\n\t            }\n\t            else out += c;\n\t        }\n\t\n\t        if (isGlob) return {op: 'glob', pattern: out};\n\t\n\t        return out;\n\t\n\t        function parseEnvVar() {\n\t            i += 1;\n\t            var varend, varname;\n\t            //debugger\n\t            if (s.charAt(i) === '{') {\n\t                i += 1;\n\t                if (s.charAt(i) === '}') {\n\t                    throw new Error(\"Bad substitution: \" + s.substr(i - 2, 3));\n\t                }\n\t                varend = s.indexOf('}', i);\n\t                if (varend < 0) {\n\t                    throw new Error(\"Bad substitution: \" + s.substr(i));\n\t                }\n\t                varname = s.substr(i, varend - i);\n\t                i = varend;\n\t            }\n\t            else if (/[*@#?$!_\\-]/.test(s.charAt(i))) {\n\t                varname = s.charAt(i);\n\t                i += 1;\n\t            }\n\t            else {\n\t                varend = s.substr(i).match(/[^\\w\\d_]/);\n\t                if (!varend) {\n\t                    varname = s.substr(i);\n\t                    i = s.length;\n\t                } else {\n\t                    varname = s.substr(i, varend.index);\n\t                    i += varend.index - 1;\n\t                }\n\t            }\n\t            return getVar(null, '', varname);\n\t        }\n\t    })\n\t    // finalize parsed aruments\n\t    .reduce(function(prev, arg){\n\t        if (arg === undefined){\n\t            return prev;\n\t        }\n\t        return prev.concat(arg);\n\t    },[]);\n\t\n\t    function getVar (_, pre, key) {\n\t        var r = typeof env === 'function' ? env(key) : env[key];\n\t        if (r === undefined) r = '';\n\t\n\t        if (typeof r === 'object') {\n\t            return pre + TOKEN + json.stringify(r) + TOKEN;\n\t        }\n\t        else return pre + r;\n\t    }\n\t}\n\n\n/***/ },\n\n/***/ 256:\n/***/ function(module, exports) {\n\n\tmodule.exports = extend\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\tfunction extend() {\n\t    var target = {}\n\t\n\t    for (var i = 0; i < arguments.length; i++) {\n\t        var source = arguments[i]\n\t\n\t        for (var key in source) {\n\t            if (hasOwnProperty.call(source, key)) {\n\t                target[key] = source[key]\n\t            }\n\t        }\n\t    }\n\t\n\t    return target\n\t}\n\n\n/***/ },\n\n/***/ 257:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"child_process\");\n\n/***/ },\n\n/***/ 259:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"fs\");\n\n/***/ },\n\n/***/ 260:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"net\");\n\n/***/ },\n\n/***/ 261:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"tty\");\n\n/***/ },\n\n/***/ 262:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"util\");\n\n/***/ }\n\n/******/ })\n});\n;\n\n\n// WEBPACK FOOTER //\n// quark.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d27475581271a88dc64a","import stream from './stream'\n\nlet previousTime\n\nconst coerce = (val) => val instanceof Error ? val.stack || val.message : val\nconst log = stream()\n\nmodule.exports = (namespace) => {\n  return (...args) => {\n    const currentTime = new Date()\n    const diff = currentTime - (previousTime || currentTime)\n    previousTime = currentTime\n\n    args = args.map(arg => coerce(arg))\n\n    log(JSON.stringify({\n      diff: diff,\n      time: currentTime,\n      tag: namespace,\n      data: args\n    }))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib.js","module.exports = require(\"electron\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"electron\"\n// module id = 24\n// module chunks = 0 1 2","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 69\n// module chunks = 1 2","/**\n * Array#filter.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @return {Array}\n */\n\nmodule.exports = function (arr, fn) {\n  if (arr.filter) return arr.filter(fn);\n  var ret = [];\n  for (var i = 0; i < arr.length; i++) {\n    if (!hasOwn.call(arr, i)) continue;\n    if (fn(arr[i], i, arr)) ret.push(arr[i]);\n  }\n  return ret;\n};\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/array-filter/index.js\n// module id = 113\n// module chunks = 1","module.exports = function (xs, f) {\n    if (xs.map) return xs.map(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = xs[i];\n        if (hasOwn.call(xs, i)) res.push(f(x, i, xs));\n    }\n    return res;\n};\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/array-map/index.js\n// module id = 114\n// module chunks = 1","var hasOwn = Object.prototype.hasOwnProperty;\n\nmodule.exports = function (xs, f, acc) {\n    var hasAcc = arguments.length >= 3;\n    if (hasAcc && xs.reduce) return xs.reduce(f, acc);\n    if (xs.reduce) return xs.reduce(f);\n    \n    for (var i = 0; i < xs.length; i++) {\n        if (!hasOwn.call(xs, i)) continue;\n        if (!hasAcc) {\n            acc = xs[i];\n            hasAcc = true;\n            continue;\n        }\n        acc = f(acc, xs[i], i);\n    }\n    return acc;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/array-reduce/index.js\n// module id = 115\n// module chunks = 1","import Debug from 'debug'\n\nimport path from 'path'\nimport xtend from 'xtend'\nimport { spawn } from 'child_process'\nimport { parse } from 'shell-quote'\n\nconst debug = Debug('quark-logger:stream')\n\nconst { platform, env } = process\n\nconst PATH_SEP = platform === 'win32' ? ';' : ':'\nconst PATH_KEY = platform === 'win32' && !(env.PATH && !env.Path) ? 'Path' : 'PATH'\nconst ESCAPE_CHAR = platform === 'win32' ? '^' : '\\\\'\nconst ELECTRON_LIB = `electron ${path.join(__dirname, 'electron.bundle.js')}`\n\nconst commandToString = (cmd) => cmd.pattern || cmd.op || handleQuotes(cmd)\n\nconst handleQuotes = (s) => {\n  if (/[\"'\\s]/.test(s)) return '\"' + s.replace(/([\"\\\\$`!])/g, '\\\\$1') + '\"'\n  if (/[\"\\s]/.test(s) && !/'/.test(s)) return \"'\" + s.replace(/(['\\\\])/g, '\\\\$1') + \"'\"\n  return String(s).replace(/([\\\\$`()!#&*|])/g, '\\\\$1')\n}\n\nconst getNewPathVariable = () => {\n  let PATH = env[PATH_KEY]\n  let result = []\n  let cwd = process.cwd()\n  let parent\n\n  while (true) {\n    parent = path.join(cwd, '..')\n    result.push(path.join(cwd, 'node_modules/.bin'))\n    if (parent === cwd) return result.concat(PATH).join(PATH_SEP)\n    cwd = parent\n  }\n}\n\nconst formatAndSpawn = (command, opts) => {\n  const options = xtend({}, opts)\n  let file\n  let args\n\n  if (platform === 'win32') {\n    file = env.comspec || 'cmd.exe'\n    args = [ '/s', '/c', '\"' + command + '\"' ]\n    options.windowsVerbatimArguments = true\n  } else {\n    file = '/bin/sh'\n    args = [ '-c', command ]\n    options.windowsVerbatimArguments = false\n  }\n\n  if (options && options.shell) {\n    file = options.shell\n    delete options.shell\n  }\n\n  debug('Spawning electron', file, args, options)\n\n  return spawn(file, args, options)\n}\n\nconst handleSpawningInMainProcess = () => {\n  let out\n  const parsed = parse(ELECTRON_LIB, xtend({ '': '$' }), { escape: ESCAPE_CHAR }).map(commandToString).join(' ')\n\n  const overridePATH = {\n    [ PATH_KEY ]: getNewPathVariable()\n  }\n\n  const child = formatAndSpawn(parsed, { env: xtend(env, overridePATH) })\n  out = child.stdin.write.bind(child.stdin)\n\n  child.stdin.setEncoding('utf-8')\n  child.stdout.pipe(process.stdout)\n\n  child.on('exit', () => {\n    out = console.log.bind(console)\n  })\n\n  return (log) => out(log)\n}\n\nmodule.exports = () => {\n  if (typeof process === 'undefined') {\n    // Web browser\n    debug('Web browser')\n\n    return console.log.bind(console)\n  } else {\n    if (process.type === 'renderer') {\n      // Renderer process\n      debug('Electron renderer process')\n\n      const { ipcRenderer } = require('electron')\n\n      return (log) => ipcRenderer.send('quark-logger:ipc', log)\n    } else {\n      if (process.versions.electron) {\n        // Electron\n        debug('Electron main process')\n\n        const { ipcMain } = require('electron')\n\n        let logger = handleSpawningInMainProcess()\n\n        ipcMain.on('quark-logger:ipc', (event, arg) => {\n          logger(arg)\n        })\n\n        return logger\n      } else {\n        // Node.js\n        debug('Node.js process')\n\n        return handleSpawningInMainProcess()\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stream.js","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/debug.js\n// module id = 125\n// module chunks = 1","\n/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  var debugColors = (process.env.DEBUG_COLORS || '').trim().toLowerCase();\n  if (0 === debugColors.length) {\n    return tty.isatty(fd);\n  } else {\n    return '0' !== debugColors\n        && 'no' !== debugColors\n        && 'false' !== debugColors\n        && 'disabled' !== debugColors;\n  }\n}\n\n/**\n * Map %o to `util.inspect()`, since Node doesn't do that out of the box.\n */\n\nvar inspect = (4 === util.inspect.length ?\n  // node <= 0.8.x\n  function (v, colors) {\n    return util.inspect(v, void 0, void 0, colors);\n  } :\n  // node > 0.8.x\n  function (v, colors) {\n    return util.inspect(v, { colors: colors });\n  }\n);\n\nexports.formatters.o = function(v) {\n  return inspect(v, this.useColors)\n    .replace(/\\s*\\n\\s*/g, ' ');\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n  var name = this.namespace;\n\n  if (useColors) {\n    var c = this.color;\n\n    args[0] = '  \\u001b[3' + c + ';1m' + name + ' '\n      + '\\u001b[0m'\n      + args[0] + '\\u001b[3' + c + 'm'\n      + ' +' + exports.humanize(this.diff) + '\\u001b[0m';\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n  return args;\n}\n\n/**\n * Invokes `console.error()` with the specified arguments.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(this, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/node.js\n// module id = 126\n// module chunks = 1","exports.parse = require('./lib/parse');\nexports.stringify = require('./lib/stringify');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jsonify/index.js\n// module id = 175\n// module chunks = 1","var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jsonify/lib/parse.js\n// module id = 176\n// module chunks = 1","var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    gap,\n    indent,\n    meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    },\n    rep;\n\nfunction quote(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    \n    escapable.lastIndex = 0;\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ? c :\n            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n    // Produce a string from holder[key].\n    var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key];\n    \n    // If the value has a toJSON method, call it to obtain a replacement value.\n    if (value && typeof value === 'object' &&\n            typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n    }\n    \n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n    if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n    }\n    \n    // What happens next depends on the value's type.\n    switch (typeof value) {\n        case 'string':\n            return quote(value);\n        \n        case 'number':\n            // JSON numbers must be finite. Encode non-finite numbers as null.\n            return isFinite(value) ? String(value) : 'null';\n        \n        case 'boolean':\n        case 'null':\n            // If the value is a boolean or null, convert it to a string. Note:\n            // typeof null does not produce 'null'. The case is included here in\n            // the remote chance that this gets fixed someday.\n            return String(value);\n            \n        case 'object':\n            if (!value) return 'null';\n            gap += indent;\n            partial = [];\n            \n            // Array.isArray\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n                \n                // Join all of the elements together, separated with commas, and\n                // wrap them in brackets.\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            \n            // If the replacer is an array, use it to select the members to be\n            // stringified.\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            else {\n                // Otherwise, iterate through all of the keys in the object.\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            \n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0 ? '{}' : gap ?\n            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n            '{' + partial.join(',') + '}';\n        gap = mind;\n        return v;\n    }\n}\n\nmodule.exports = function (value, replacer, space) {\n    var i;\n    gap = '';\n    indent = '';\n    \n    // If the space parameter is a number, make an indent string containing that\n    // many spaces.\n    if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n            indent += ' ';\n        }\n    }\n    // If the space parameter is a string, it will be used as the indent string.\n    else if (typeof space === 'string') {\n        indent = space;\n    }\n\n    // If there is a replacer, it must be a function or an array.\n    // Otherwise, throw an error.\n    rep = replacer;\n    if (replacer && typeof replacer !== 'function'\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n    }\n    \n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return str('', {'': value});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jsonify/lib/stringify.js\n// module id = 177\n// module chunks = 1","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ms/index.js\n// module id = 179\n// module chunks = 1","var json = typeof JSON !== undefined ? JSON : require('jsonify');\nvar map = require('array-map');\nvar filter = require('array-filter');\nvar reduce = require('array-reduce');\n\nexports.quote = function (xs) {\n    return map(xs, function (s) {\n        if (s && typeof s === 'object') {\n            return s.op.replace(/(.)/g, '\\\\$1');\n        }\n        else if (/[\"\\s]/.test(s) && !/'/.test(s)) {\n            return \"'\" + s.replace(/(['\\\\])/g, '\\\\$1') + \"'\";\n        }\n        else if (/[\"'\\s]/.test(s)) {\n            return '\"' + s.replace(/([\"\\\\$`!])/g, '\\\\$1') + '\"';\n        }\n        else {\n            return String(s).replace(/([#!\"$&'()*,:;<=>?@\\[\\\\\\]^`{|}])/g, '\\\\$1'); \n        }\n    }).join(' ');\n};\n\nvar CONTROL = '(?:' + [\n    '\\\\|\\\\|', '\\\\&\\\\&', ';;', '\\\\|\\\\&', '[&;()|<>]'\n].join('|') + ')';\nvar META = '|&;()<> \\\\t';\nvar BAREWORD = '(\\\\\\\\[\\'\"' + META + ']|[^\\\\s\\'\"' + META + '])+';\nvar SINGLE_QUOTE = '\"((\\\\\\\\\"|[^\"])*?)\"';\nvar DOUBLE_QUOTE = '\\'((\\\\\\\\\\'|[^\\'])*?)\\'';\n\nvar TOKEN = '';\nfor (var i = 0; i < 4; i++) {\n    TOKEN += (Math.pow(16,8)*Math.random()).toString(16);\n}\n\nexports.parse = function (s, env, opts) {\n    var mapped = parse(s, env, opts);\n    if (typeof env !== 'function') return mapped;\n    return reduce(mapped, function (acc, s) {\n        if (typeof s === 'object') return acc.concat(s);\n        var xs = s.split(RegExp('(' + TOKEN + '.*?' + TOKEN + ')', 'g'));\n        if (xs.length === 1) return acc.concat(xs[0]);\n        return acc.concat(map(filter(xs, Boolean), function (x) {\n            if (RegExp('^' + TOKEN).test(x)) {\n                return json.parse(x.split(TOKEN)[1]);\n            }\n            else return x;\n        }));\n    }, []);\n};\n\nfunction parse (s, env, opts) {\n    var chunker = new RegExp([\n        '(' + CONTROL + ')', // control chars\n        '(' + BAREWORD + '|' + SINGLE_QUOTE + '|' + DOUBLE_QUOTE + ')*'\n    ].join('|'), 'g');\n    var match = filter(s.match(chunker), Boolean);\n    var commented = false;\n\n    if (!match) return [];\n    if (!env) env = {};\n    if (!opts) opts = {};\n    return map(match, function (s, j) {\n        if (commented) {\n            return;\n        }\n        if (RegExp('^' + CONTROL + '$').test(s)) {\n            return { op: s };\n        }\n\n        // Hand-written scanner/parser for Bash quoting rules:\n        //\n        //  1. inside single quotes, all characters are printed literally.\n        //  2. inside double quotes, all characters are printed literally\n        //     except variables prefixed by '$' and backslashes followed by\n        //     either a double quote or another backslash.\n        //  3. outside of any quotes, backslashes are treated as escape\n        //     characters and not printed (unless they are themselves escaped)\n        //  4. quote context can switch mid-token if there is no whitespace\n        //     between the two quote contexts (e.g. all'one'\"token\" parses as\n        //     \"allonetoken\")\n        var SQ = \"'\";\n        var DQ = '\"';\n        var DS = '$';\n        var BS = opts.escape || '\\\\';\n        var quote = false;\n        var esc = false;\n        var out = '';\n        var isGlob = false;\n\n        for (var i = 0, len = s.length; i < len; i++) {\n            var c = s.charAt(i);\n            isGlob = isGlob || (!quote && (c === '*' || c === '?'));\n            if (esc) {\n                out += c;\n                esc = false;\n            }\n            else if (quote) {\n                if (c === quote) {\n                    quote = false;\n                }\n                else if (quote == SQ) {\n                    out += c;\n                }\n                else { // Double quote\n                    if (c === BS) {\n                        i += 1;\n                        c = s.charAt(i);\n                        if (c === DQ || c === BS || c === DS) {\n                            out += c;\n                        } else {\n                            out += BS + c;\n                        }\n                    }\n                    else if (c === DS) {\n                        out += parseEnvVar();\n                    }\n                    else {\n                        out += c;\n                    }\n                }\n            }\n            else if (c === DQ || c === SQ) {\n                quote = c;\n            }\n            else if (RegExp('^' + CONTROL + '$').test(c)) {\n                return { op: s };\n            }\n            else if (RegExp('^#$').test(c)) {\n                commented = true;\n                if (out.length){\n                    return [out, { comment: s.slice(i+1) + match.slice(j+1).join(' ') }];\n                }\n                return [{ comment: s.slice(i+1) + match.slice(j+1).join(' ') }];\n            }\n            else if (c === BS) {\n                esc = true;\n            }\n            else if (c === DS) {\n                out += parseEnvVar();\n            }\n            else out += c;\n        }\n\n        if (isGlob) return {op: 'glob', pattern: out};\n\n        return out;\n\n        function parseEnvVar() {\n            i += 1;\n            var varend, varname;\n            //debugger\n            if (s.charAt(i) === '{') {\n                i += 1;\n                if (s.charAt(i) === '}') {\n                    throw new Error(\"Bad substitution: \" + s.substr(i - 2, 3));\n                }\n                varend = s.indexOf('}', i);\n                if (varend < 0) {\n                    throw new Error(\"Bad substitution: \" + s.substr(i));\n                }\n                varname = s.substr(i, varend - i);\n                i = varend;\n            }\n            else if (/[*@#?$!_\\-]/.test(s.charAt(i))) {\n                varname = s.charAt(i);\n                i += 1;\n            }\n            else {\n                varend = s.substr(i).match(/[^\\w\\d_]/);\n                if (!varend) {\n                    varname = s.substr(i);\n                    i = s.length;\n                } else {\n                    varname = s.substr(i, varend.index);\n                    i += varend.index - 1;\n                }\n            }\n            return getVar(null, '', varname);\n        }\n    })\n    // finalize parsed aruments\n    .reduce(function(prev, arg){\n        if (arg === undefined){\n            return prev;\n        }\n        return prev.concat(arg);\n    },[]);\n\n    function getVar (_, pre, key) {\n        var r = typeof env === 'function' ? env(key) : env[key];\n        if (r === undefined) r = '';\n\n        if (typeof r === 'object') {\n            return pre + TOKEN + json.stringify(r) + TOKEN;\n        }\n        else return pre + r;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/shell-quote/index.js\n// module id = 249\n// module chunks = 1","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xtend/immutable.js\n// module id = 256\n// module chunks = 1","module.exports = require(\"child_process\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"child_process\"\n// module id = 257\n// module chunks = 1","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 259\n// module chunks = 1","module.exports = require(\"net\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"net\"\n// module id = 260\n// module chunks = 1","module.exports = require(\"tty\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"tty\"\n// module id = 261\n// module chunks = 1","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 262\n// module chunks = 1"],"sourceRoot":""}